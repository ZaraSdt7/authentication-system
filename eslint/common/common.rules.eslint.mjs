export const CommonRules =
{
    'array-bracket-spacing': [ 'error', 'always' ],
    'brace-style': [ 'error', 'allman', { allowSingleLine: true } ],
    'comma-dangle': [ 'error', 'always-multiline' ],
    'comma-spacing': [ 'error', { before: false, after: true } ],
    eqeqeq: 'warn',
    indent: [
        'error',
        4,
        {
            SwitchCase: 1,
            ignoredNodes: [ 'PropertyDefinition' ],
        },
    ],
    'init-declarations': 'off',
    'linebreak-style': [ 'error', 'unix' ],
    'no-cond-assign': [ 'error', 'always' ],
    'no-console': 'off',
    'no-empty': 'off',
    'no-inline-comments': 'off',
    'no-unused-vars': [
        'off',
        { vars: 'all', args: 'after-used', ignoreRestSiblings: false },
    ],
    'object-curly-spacing': [
        'error',
        'always',
        { arraysInObjects: true, objectsInObjects: true },
    ],
    'one-var': 'off',
    quotes: [ 'error', 'single' ],
    semi: [ 'error', 'never' ],
    'space-infix-ops': [ 'error', { int32Hint: false } ],
    'space-before-blocks': [
        'error',
        { functions: 'always', keywords: 'always', classes: 'always' },
    ],
    'arrow-spacing': [ 'error', { before: true, after: true } ],
    'switch-colon-spacing': 'error',
    'block-spacing': 'error',
    'space-unary-ops': [
        'error',
        {
            words: true,
            nonwords: false,
            overrides: {
                new: false,
                '++': true,
            },
        },
    ],
    'spaced-comment': [
        'error',
        'always',
        { markers: [ '/' ], exceptions: [ '-' ] },
    ],
    'keyword-spacing': 'error',
    'space-before-function-paren': [
        'error',
        { anonymous: 'always', named: 'never', asyncArrow: 'always' },
    ],
    'semi-spacing': [ 'error', { before: false, after: true } ],
    'no-trailing-spaces': [ 'error', { ignoreComments: true } ],
    'no-mixed-spaces-and-tabs': [ 'error', 'smart-tabs' ],
    strict: 'off',
    'no-spaced-func': 'error',
    'unicorn/filename-case': [
        'warn',
        {
            cases: {
                kebabCase: true,
            },
        },
    ],
    'no-restricted-imports': [
        'error',
        {
            paths: [ 'src' ],
            patterns: [ 'src/*' ],
        },
    ],
    'no-eval': 'error',
    'unicorn/no-fn-reference-in-iterator': 'off',
    'unicorn/no-array-for-each': 'off',
    'unicorn/no-null': 'off',
    'unicorn/prefer-array-some': 'off',
    'unicorn/consistent-destructuring': 'off',
    'unicorn/no-array-reduce': 'off',
    'unicorn/prefer-module': 'off',
    'unicorn/prefer-spread': 'off',
    'unicorn/no-array-callback-reference': 'off',
    'unicorn/consistent-function-scoping': 'off',
    'unicorn/no-useless-undefined': 'off',
    'unicorn/prefer-ternary': 'off',
    'unicorn/prefer-node-protocol': 'off',
    'unicorn/prefer-top-level-await': 'off',
    'unicorn/prevent-abbreviations': [
        'error',
        {
            allowList: { Param: true, Req: true, Res: true },
            ignore: [ '\\.e2e-spec$', /^args/i, /^ignore/i ],
        },
    ],
}
